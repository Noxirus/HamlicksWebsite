{"version":3,"sources":["components/navbar.jsx","components/common/content.jsx","services/logService.js","services/httpService.js","services/userService.js","services/authService.js","services/flavourService.js","components/userProfile.jsx","components/common/like.jsx","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/flavoursTable.jsx","components/common/pagination.jsx","components/common/searchBox.jsx","utils/paginate.js","components/common/listGroup.jsx","services/typeService.js","components/flavours.jsx","components/usersTable.jsx","components/users.jsx","components/flavourDescription.jsx","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/flavourForm.jsx","components/home.jsx","components/about.jsx","components/userForm.jsx","components/common/notFound.jsx","components/loginForm.jsx","components/logout.jsx","components/common/protectedRoute.jsx","components/registerForm.jsx","App.js","index.js","images/Hamlicks_TITLE.png","images/Piggy.png","images/Hamlicks_LOGOCropped.png","images/Carousel1.jpg","images/Carousel2.jpg","images/Carousel3.jpg","images/About.png","images/Minty.png","images/Chicky.png","images/Strawpiggy.png"],"names":["NavBar","user","Navbar","bg","expand","className","to","src","title","alt","height","width","Toggle","aria-controls","Collapse","id","Nav","Fragment","isAdmin","_id","name","Content","state","data","errors","label","this","picture","Component","init","log","error","console","axios","defaults","baseURL","process","interceptors","response","use","status","logger","toast","Promise","reject","get","post","put","delete","setJwt","jwt","headers","common","userUrl","register","a","http","email","password","favorites","deleteUser","userId","getUser","saveUser","body","localStorage","setItem","getCurrentUser","getItem","jwtDecode","ex","getJwt","login","logout","removeItem","loginWithJwt","flavourUrl","getFlavour","flavourId","deleteFlavour","saveFlavour","flavour","UserProfile","props","match","params","token","history","replace","length","favoritesList","i","flavourName","push","setState","mapToViewModel","populateUser","key","Container","Row","Col","xs","md","piggyImage","margin","Like","liked","onClick","style","cursor","icon","fullHeart","emptyHeart","TableHeader","raiseSort","path","sortColumn","order","onSort","renderSortIcon","column","faSortUp","faSortDown","columns","map","TableBody","renderCell","item","content","_","createKey","Table","FlavoursTable","onLike","editColumn","deleteColumn","onDelete","auth","flavours","Pagination","itemsCount","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","range","page","SearchBox","value","onChange","type","placeholder","e","currentTarget","paginate","items","pageNumber","startIndex","slice","take","ListGroup","textProperty","valueProperty","onItemSelect","selectedItem","defaultProps","getTypes","Flavours","types","searchQuery","selectedType","handleDelete","originalFlavours","filter","m","handleLike","index","indexOf","iat","userService","remove","handlePageChange","handleTypeSelect","handleSearch","query","handleSort","getPageData","allFlavours","filtered","toLowerCase","startsWith","orderBy","totalCount","y","count","stye","marginBottom","UsersTable","users","Users","originalUsers","allUsers","FlavourDescription","typeId","description","cost","licks","populateFlavour","renderText","renderImage","Input","rest","htmlFor","Select","options","option","Form","validate","Joi","schema","abortEarly","details","message","validateProperty","obj","handleSubmit","preventDefault","doSubmit","handleChange","input","errorMessage","disabled","FlavourForm","string","required","number","min","max","populateTypes","onSubmit","renderInput","renderSelect","renderButton","Home","Carousel","Item","image1","image2","Caption","image3","image4","textDecoration","fontWeight","About","mintyImage","aboutImage","UserForm","location","window","from","pathname","NotFound","LoginForm","chickyImage","Logout","ProtectedRoute","component","render","RegisterForm","strawPiggyImage","App","exact","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.fbafd72e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport title from \"../images/Hamlicks_TITLE.png\";\r\n\r\nconst NavBar = ({ user }) => {\r\n  return (\r\n    <Navbar bg=\"dark\" expand=\"lg\">\r\n      <Link className=\"navbar-brand\" to=\"/\">\r\n        <img src={title} alt=\"Hamlicks\" height=\"100\" width=\"350\" />\r\n      </Link>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"ml-auto\">\r\n          <NavLink className=\"nav-link\" to=\"/flavours\">\r\n            Flavours\r\n          </NavLink>\r\n          <NavLink className=\"nav-link\" to=\"/about\">\r\n            About\r\n          </NavLink>\r\n          {!user && (\r\n            <React.Fragment>\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/login\">\r\n                  Login\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/register\">\r\n                  Register\r\n                </NavLink>\r\n              </li>\r\n            </React.Fragment>\r\n          )}\r\n          {user && user.isAdmin && (\r\n            <React.Fragment>\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to={`/users`}>\r\n                  Users\r\n                </NavLink>\r\n              </li>\r\n            </React.Fragment>\r\n          )}\r\n          {user && (\r\n            <React.Fragment>\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to={`/users/${user._id}`}>\r\n                  {user.name}\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/logout\">\r\n                  Logout\r\n                </NavLink>\r\n              </li>\r\n            </React.Fragment>\r\n          )}\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Content extends Component {\r\n  state = { data: {}, errors: {} };\r\n  renderText(name, label, type = \"text\") {\r\n    const { data } = this.state;\r\n    return <p>{data[name]}</p>;\r\n  }\r\n  /*TODO add a nice background to the content window */\r\n  renderImage(name, label, type = \"image\") {\r\n    const { data } = this.state;\r\n    return <img src={data.picture} alt={name} height=\"400\" width=\"320\" />;\r\n  }\r\n}\r\n\r\nexport default Content;\r\n","function init() {}\r\n\r\nfunction log(error) {\r\n  console.error(error);\r\n}\r\n\r\nexport default {\r\n  init,\r\n  log,\r\n};\r\n","import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport logger from \"./logService\";\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.response.use(null, (error) => {\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status <= 500;\r\n\r\n  if (!expectedError) {\r\n    logger.log(error);\r\n    toast.error(\"An unexpected error occurred\");\r\n  }\r\n  return Promise.reject(error);\r\n});\r\n\r\nfunction setJwt(jwt) {\r\n  axios.defaults.headers.common[\"x-auth-token\"] = jwt;\r\n}\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n  setJwt,\r\n};\r\n","import http from \"./httpService\";\r\n\r\nconst apiEndpoint = \"/users\";\r\n\r\nfunction userUrl(id) {\r\n  return `${apiEndpoint}/${id}`;\r\n}\r\n\r\nexport function getUsers() {\r\n  return http.get(apiEndpoint);\r\n}\r\n\r\nexport async function register(user) {\r\n  return await http.post(apiEndpoint, {\r\n    email: user.email,\r\n    name: user.name,\r\n    password: user.password,\r\n    favorites: [],\r\n  });\r\n}\r\n\r\nexport function deleteUser(userId) {\r\n  http.delete(userUrl(userId));\r\n}\r\n\r\nexport function getUser(userId) {\r\n  return http.get(userUrl(userId));\r\n}\r\n\r\nexport function saveUser(user) {\r\n  if (user._id) {\r\n    const body = { ...user };\r\n    delete body._id;\r\n    return http.put(userUrl(user._id), body);\r\n  } else {\r\n    return http.post(apiEndpoint, user);\r\n  }\r\n}\r\n\r\n//TODO for backend services you will want to add an update password as well as attach it to this service\r\n","import http from \"./httpService\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nconst apiEndpoint = \"/auth\";\r\nconst tokenKey = \"token\";\r\n\r\nhttp.setJwt(getJwt());\r\n\r\nexport async function login(email, password) {\r\n  const { data: jwt } = await http.post(apiEndpoint, { email, password });\r\n  localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function loginWithJwt(jwt) {\r\n  localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function logout() {\r\n  localStorage.removeItem(tokenKey);\r\n}\r\n\r\nexport function getCurrentUser() {\r\n  try {\r\n    const jwt = localStorage.getItem(tokenKey);\r\n    return jwtDecode(jwt);\r\n  } catch (ex) {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function getJwt() {\r\n  return localStorage.getItem(tokenKey);\r\n}\r\n\r\nexport default {\r\n  login,\r\n  logout,\r\n  getCurrentUser,\r\n  loginWithJwt,\r\n  getJwt,\r\n};\r\n","import http from \"./httpService\";\r\n\r\nconst apiEndpoint = \"/flavours\";\r\n\r\nfunction flavourUrl(id) {\r\n  return `${apiEndpoint}/${id}`;\r\n}\r\n\r\nexport function getFlavours() {\r\n  return http.get(apiEndpoint);\r\n}\r\n\r\nexport function getFlavour(flavourId) {\r\n  return http.get(flavourUrl(flavourId));\r\n}\r\n\r\nexport function deleteFlavour(flavourId) {\r\n  http.delete(flavourUrl(flavourId));\r\n}\r\n\r\nexport function saveFlavour(flavour) {\r\n  if (flavour._id) {\r\n    const body = { ...flavour };\r\n    delete body._id;\r\n    return http.put(flavourUrl(flavour._id), body);\r\n  } else {\r\n    return http.post(apiEndpoint, flavour);\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Content from \"./common/content\";\r\nimport { getUser } from \"../services/userService\";\r\nimport { getCurrentUser } from \"../services/authService\";\r\nimport { getFlavour } from \"../services/flavourService\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport piggyImage from \"../images/Piggy.png\";\r\n\r\nclass UserProfile extends Content {\r\n  state = {\r\n    data: {\r\n      email: \"\",\r\n      name: \"\",\r\n      favorites: [],\r\n    },\r\n  };\r\n\r\n  //Will need to be added to the backend service as well\r\n  async populateUser() {\r\n    try {\r\n      const userId = this.props.match.params.id;\r\n      const token = await getCurrentUser();\r\n      //Check if the user token isnt admin or the users Id\r\n      if (token._id !== userId && !token.isAdmin)\r\n        return this.props.history.replace(\"/not-found\");\r\n      const { data: user } = await getUser(userId);\r\n\r\n      //Get users favorite flavours\r\n      if (user.favorites.length > 0) {\r\n        let favoritesList = [];\r\n        for (let i = 0; i < user.favorites.length; i++) {\r\n          let flavourName = await getFlavour(user.favorites[i]);\r\n          favoritesList.push(flavourName.data.name);\r\n        }\r\n        this.setState({ favorites: favoritesList });\r\n      }\r\n\r\n      this.setState({ data: this.mapToViewModel(user) });\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404) {\r\n        this.props.history.replace(\"/not-found\");\r\n      }\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.populateUser();\r\n  }\r\n\r\n  mapToViewModel(user) {\r\n    return {\r\n      _id: user._id,\r\n      name: user.name,\r\n      email: user.email,\r\n      favorites: user.favorites,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    //TODO make this particular section look nice, maybe let people pick their own picture?\r\n    let favoritesList = [];\r\n    if (this.state.data.favorites.length === 0) {\r\n      favoritesList.push(<p key=\"1\">No favorites currently</p>);\r\n    }\r\n    for (let i = 0; i < this.state.data.favorites.length; i++) {\r\n      favoritesList.push(\r\n        <React.Fragment key={i}>\r\n          <Link to={`/flavours/${this.state.data.favorites[i]}`}>\r\n            {this.state.favorites[i]}\r\n          </Link>\r\n          <br />\r\n        </React.Fragment>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Container className=\"back\">\r\n        <Row>\r\n          <Col xs={12} md={7}>\r\n            <h1>{this.state.data.name}</h1>\r\n            <p>{this.state.data.email}</p>\r\n            <h3>Favorite Flavours</h3>\r\n            {favoritesList}\r\n            <br />\r\n            <Link to={`/usersedit/${this.state.data._id}`}>\r\n              <button className=\"btn btn-primary btn-sm\">Edit</button>\r\n            </Link>\r\n          </Col>\r\n          <Col xs={12} md={5}>\r\n            <img\r\n              className=\"center\"\r\n              src={piggyImage}\r\n              alt=\"Oink Oink\"\r\n              height=\"400\"\r\n              width=\"300\"\r\n              margin=\"auto\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserProfile;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faHeart as fullHeart } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faHeart as emptyHeart } from \"@fortawesome/free-regular-svg-icons\";\r\n\r\nconst Like = (props) => {\r\n  if (props.liked) {\r\n    return (\r\n      <FontAwesomeIcon\r\n        onClick={props.onClick}\r\n        style={{ cursor: \"pointer\" }}\r\n        icon={fullHeart}\r\n      />\r\n    );\r\n  } else {\r\n    return (\r\n      <FontAwesomeIcon\r\n        onClick={props.onClick}\r\n        style={{ cursor: \"pointer\" }}\r\n        icon={emptyHeart}\r\n      />\r\n    );\r\n  }\r\n};\r\nexport default Like;\r\n","import React, { Component } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSortUp, faSortDown } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass TableHeader extends Component {\r\n  raiseSort = (path) => {\r\n    const sortColumn = { ...this.props.sortColumn };\r\n    if (sortColumn.path === path) {\r\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n    } else {\r\n      sortColumn.path = path;\r\n      sortColumn.order = \"asc\";\r\n    }\r\n    this.props.onSort(sortColumn);\r\n  };\r\n\r\n  renderSortIcon = (column) => {\r\n    const { sortColumn } = this.props;\r\n    if (column.path !== sortColumn.path) return null;\r\n    if (sortColumn.order === \"asc\") return <FontAwesomeIcon icon={faSortUp} />;\r\n    return <FontAwesomeIcon icon={faSortDown} />;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          {this.props.columns.map((column) => (\r\n            <th\r\n              className=\"clickable\"\r\n              key={column.path || column.key}\r\n              onClick={() => this.raiseSort(column.path)}\r\n            >\r\n              {column.label} {this.renderSortIcon(column)}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableHeader;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nclass TableBody extends Component {\r\n  renderCell = (item, column) => {\r\n    if (column.content) return column.content(item);\r\n\r\n    return _.get(item, column.path);\r\n  };\r\n\r\n  createKey = (item, column) => {\r\n    return item._id + (column.path || column.key);\r\n  };\r\n\r\n  render() {\r\n    const { data, columns } = this.props;\r\n    return (\r\n      <tbody>\r\n        {data.map((item) => (\r\n          <tr key={item._id}>\r\n            {columns.map((column) => (\r\n              <td key={this.createKey(item, column)}>\r\n                {this.renderCell(item, column)}\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableBody;\r\n","import React from \"react\";\r\nimport TableHeader from \"./tableHeader\";\r\nimport TableBody from \"./tableBody\";\r\n\r\nconst Table = ({ columns, sortColumn, onSort, data }) => {\r\n  return (\r\n    <table className=\"table\">\r\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\r\n      <TableBody columns={columns} data={data} />\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React, { Component } from \"react\";\r\nimport auth from \"../services/authService\";\r\nimport Like from \"./common/like\";\r\nimport Table from \"./common/table\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//TODO new flavour button does not show if there are no flavours\r\nclass FlavoursTable extends Component {\r\n  columns = [\r\n    {\r\n      path: \"name\",\r\n      label: \"Name\",\r\n      content: (flavour) => (\r\n        <Link to={`/flavours/${flavour._id}`}>{flavour.name}</Link>\r\n      ),\r\n    },\r\n    { path: \"type.name\", label: \"Type\" },\r\n    { path: \"cost\", label: \"Cost\" },\r\n    { path: \"licks\", label: \"Licks\" },\r\n    {\r\n      key: \"like\",\r\n      content: (flavour) => (\r\n        <Like\r\n          liked={flavour.liked}\r\n          onClick={() => this.props.onLike(flavour)}\r\n        />\r\n      ),\r\n    },\r\n  ];\r\n\r\n  editColumn = {\r\n    key: \"edit\",\r\n    content: (flavour) => (\r\n      <Link to={`/flavoursedit/${flavour._id}`}>\r\n        <button className=\"btn btn-primary btn-sm\">Edit</button>\r\n      </Link>\r\n    ),\r\n  };\r\n\r\n  deleteColumn = {\r\n    key: \"delete\",\r\n    content: (flavour) => (\r\n      <button\r\n        onClick={() => this.props.onDelete(flavour)}\r\n        className=\"btn btn-danger btn-sm\"\r\n      >\r\n        Delete\r\n      </button>\r\n    ),\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    const user = auth.getCurrentUser();\r\n    if (user && user.isAdmin)\r\n      this.columns.push(this.editColumn) &&\r\n        this.columns.push(this.deleteColumn);\r\n  }\r\n\r\n  render() {\r\n    const { flavours, onSort, sortColumn } = this.props;\r\n\r\n    return (\r\n      <Table\r\n        columns={this.columns}\r\n        data={flavours}\r\n        sortColumn={sortColumn}\r\n        onSort={onSort}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default FlavoursTable;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport _ from \"lodash\"; //underscore\r\n\r\nconst Pagination = ({ itemsCount, pageSize, currentPage, onPageChange }) => {\r\n  const pagesCount = Math.ceil(itemsCount / pageSize);\r\n  if (pagesCount === 1) return null;\r\n  const pages = _.range(1, pagesCount + 1);\r\n\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        {pages.map((page) => (\r\n          <li\r\n            key={page}\r\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\r\n          >\r\n            <div className=\"page-link\" onClick={() => onPageChange(page)}>\r\n              {page}\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  itemsCount: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\n\r\nconst SearchBox = ({ value, onChange }) => {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      name=\"query\"\r\n      className=\"form-control my-3\"\r\n      placeholder=\"Search...\"\r\n      value={value}\r\n      onChange={(e) => onChange(e.currentTarget.value)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import _ from \"lodash\";\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize;\r\n  return _(items).slice(startIndex).take(pageSize).value();\r\n}\r\n","import React from \"react\";\r\n\r\nconst ListGroup = ({\r\n  items,\r\n  textProperty,\r\n  valueProperty,\r\n  onItemSelect,\r\n  selectedItem,\r\n}) => {\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {items.map((item) => (\r\n        <li\r\n          onClick={() => onItemSelect(item)}\r\n          key={item[valueProperty]}\r\n          className={\r\n            item === selectedItem ? \"list-group-item active\" : \"list-group-item\"\r\n          }\r\n        >\r\n          {item[textProperty]}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nListGroup.defaultProps = {\r\n  textProperty: \"name\",\r\n  valueProperty: \"_id\",\r\n};\r\n\r\nexport default ListGroup;\r\n","import http from \"./httpService\";\r\n\r\nexport function getTypes() {\r\n  return http.get(\"/types\");\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { getFlavours, deleteFlavour } from \"../services/flavourService\";\r\nimport auth from \"../services/authService\";\r\nimport * as userService from \"../services/userService\";\r\nimport FlavoursTable from \"./flavoursTable\";\r\nimport Pagination from \"./common/pagination\";\r\nimport SearchBox from \"./common/searchBox\";\r\nimport { paginate } from \"../utils/paginate\";\r\nimport ListGroup from \"./common/listGroup\";\r\nimport { getTypes } from \"../services/typeService\";\r\nimport _ from \"lodash\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n//This is the flavours component that will display all the flavours and handle the various requests\r\nclass Flavours extends Component {\r\n  state = {\r\n    flavours: [],\r\n    types: [],\r\n    currentPage: 1,\r\n    pageSize: 4,\r\n    searchQuery: \"\",\r\n    selectedType: null,\r\n    sortColumn: { path: \"title\", order: \"asc\" },\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { data } = await getTypes();\r\n    const types = [{ _id: \"\", name: \"All Types\" }, ...data];\r\n\r\n    const { data: flavours } = await getFlavours();\r\n    this.setState({ flavours, types });\r\n  }\r\n\r\n  handleDelete = async (flavour) => {\r\n    const originalFlavours = this.state.flavours;\r\n    const flavours = originalFlavours.filter((m) => m._id !== flavour._id);\r\n    this.setState({ flavours });\r\n\r\n    try {\r\n      await deleteFlavour(flavour._id);\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404)\r\n        toast.error(\"This flavour has already been deleted\");\r\n\r\n      this.setState({ flavours: originalFlavours });\r\n    }\r\n  };\r\n\r\n  handleLike = async (flavour) => {\r\n    const flavours = [...this.state.flavours];\r\n    const index = flavours.indexOf(flavour);\r\n    flavours[index] = { ...flavours[index] };\r\n    flavours[index].liked = !flavours[index].liked;\r\n    let user = auth.getCurrentUser();\r\n    //Liking a flavour\r\n    if (flavours[index].liked && user) {\r\n      delete user.iat;\r\n      user.favorites.push(flavour._id);\r\n      const response = await userService.saveUser(user);\r\n      auth.loginWithJwt(response.headers[\"x-auth-token\"]);\r\n      //Unliking a flavour\r\n    } else if (!flavours[index].liked && user) {\r\n      delete user.iat;\r\n      //TODO Pop just removed the end, splice will remove all based on a range\r\n      _.remove(user.favorites, function (e) {\r\n        return e === flavour._id;\r\n      });\r\n      const response = await userService.saveUser(user);\r\n      auth.loginWithJwt(response.headers[\"x-auth-token\"]);\r\n    }\r\n    this.setState({ flavours });\r\n  };\r\n\r\n  handlePageChange = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleTypeSelect = (type) => {\r\n    this.setState({ selectedType: type, searchQuery: \"\", currentPage: 1 });\r\n  };\r\n\r\n  handleSearch = (query) => {\r\n    this.setState({ searchQuery: query, selectedType: null, currentPage: 1 });\r\n  };\r\n\r\n  handleSort = (sortColumn) => {\r\n    this.setState({ sortColumn });\r\n  };\r\n\r\n  getPageData = () => {\r\n    const {\r\n      pageSize,\r\n      currentPage,\r\n      sortColumn,\r\n      selectedType,\r\n      searchQuery,\r\n      flavours: allFlavours,\r\n    } = this.state;\r\n\r\n    let filtered = allFlavours;\r\n    if (searchQuery) {\r\n      filtered = allFlavours.filter((m) =>\r\n        m.name.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n    } else if (selectedType && selectedType._id) {\r\n      filtered = allFlavours.filter((m) => m.type._id === selectedType._id);\r\n    }\r\n\r\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n    const flavours = paginate(sorted, currentPage, pageSize);\r\n    //Get users liked flavours\r\n    const user = auth.getCurrentUser();\r\n    if (user) {\r\n      if (user.favorites.length === 0) {\r\n        return { totalCount: filtered.length, data: flavours };\r\n      }\r\n      for (let i = 0; i < user.favorites.length; i++) {\r\n        for (let y = 0; y < flavours.length; y++) {\r\n          if (user.favorites[i] === flavours[y]._id) {\r\n            flavours[y].liked = true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return { totalCount: filtered.length, data: flavours };\r\n  };\r\n\r\n  render() {\r\n    const { length: count } = this.state.flavours;\r\n    const { pageSize, currentPage, sortColumn, searchQuery } = this.state;\r\n    const user = auth.getCurrentUser();\r\n    if (count === 0)\r\n      return (\r\n        <div>\r\n          {/*TODO this button is repeated twice */}\r\n          {user && user.isAdmin && (\r\n            <Link\r\n              to=\"/flavoursEdit/new\"\r\n              className=\"btn btn-primary\"\r\n              stye={{ marginBottom: 20 }}\r\n            >\r\n              New Flavour\r\n            </Link>\r\n          )}\r\n          <p className=\"back\">Getting the flavours from the freezer.</p>\r\n        </div>\r\n      );\r\n\r\n    const { totalCount, data: flavours } = this.getPageData();\r\n\r\n    return (\r\n      <div className=\"row back\">\r\n        <div className=\"col-md-2 col-sm-4\">\r\n          <ListGroup\r\n            items={this.state.types}\r\n            selectedItem={this.state.selectedType}\r\n            onItemSelect={this.handleTypeSelect}\r\n          />\r\n        </div>\r\n        <div className=\"col\">\r\n          {user && user.isAdmin && (\r\n            <Link\r\n              to=\"/flavoursEdit/new\"\r\n              className=\"btn btn-primary\"\r\n              stye={{ marginBottom: 20 }}\r\n            >\r\n              New Flavour\r\n            </Link>\r\n          )}\r\n          {totalCount === 1 && <p>Currently {totalCount} flavour in stock.</p>}\r\n          {totalCount > 1 && <p>Currently {totalCount} flavours in stock.</p>}\r\n          <SearchBox value={searchQuery} onChange={this.handleSearch} />\r\n          <FlavoursTable\r\n            flavours={flavours}\r\n            sortColumn={sortColumn}\r\n            onLike={this.handleLike}\r\n            onDelete={this.handleDelete}\r\n            onSort={this.handleSort}\r\n          />\r\n          <Pagination\r\n            itemsCount={totalCount}\r\n            pageSize={pageSize}\r\n            currentPage={currentPage}\r\n            onPageChange={this.handlePageChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Flavours;\r\n","import React, { Component } from \"react\";\r\nimport auth from \"../services/authService\";\r\nimport Table from \"./common/table\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass UsersTable extends Component {\r\n  columns = [\r\n    {\r\n      path: \"name\",\r\n      label: \"Name\",\r\n      content: (user) => <Link to={`/users/${user._id}`}>{user.name}</Link>,\r\n    },\r\n  ];\r\n\r\n  editColumn = {\r\n    key: \"edit\",\r\n    content: (user) => (\r\n      <Link to={`/usersedit/${user._id}`}>\r\n        <button className=\"btn btn-primary btn-sm\">Edit</button>\r\n      </Link>\r\n    ),\r\n  };\r\n\r\n  deleteColumn = {\r\n    key: \"delete\",\r\n    content: (user) => (\r\n      <button\r\n        onClick={() => this.props.onDelete(user)}\r\n        className=\"btn btn-danger btn-sm\"\r\n      >\r\n        Delete\r\n      </button>\r\n    ),\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    const user = auth.getCurrentUser();\r\n    if (user && user.isAdmin)\r\n      this.columns.push(this.editColumn) &&\r\n        this.columns.push(this.deleteColumn);\r\n  }\r\n\r\n  render() {\r\n    const { users, onSort, sortColumn } = this.props;\r\n\r\n    return (\r\n      <Table\r\n        columns={this.columns}\r\n        data={users}\r\n        sortColumn={sortColumn}\r\n        onSort={onSort}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default UsersTable;\r\n","import React, { Component } from \"react\";\r\nimport { getUsers, deleteUser } from \"../services/userService\";\r\nimport auth from \"../services/authService\";\r\nimport UsersTable from \"./usersTable\";\r\nimport Pagination from \"./common/pagination\";\r\nimport SearchBox from \"./common/searchBox\";\r\nimport { paginate } from \"../utils/paginate\";\r\nimport _ from \"lodash\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n//This is the flavours component that will display all the flavours and handle the various requests\r\nclass Users extends Component {\r\n  state = {\r\n    users: [],\r\n    currentPage: 1,\r\n    pageSize: 4,\r\n    searchQuery: \"\",\r\n    selectedType: null,\r\n    sortColumn: { path: \"title\", order: \"asc\" },\r\n  };\r\n\r\n  async componentDidMount() {\r\n    //Check to make sure the user is admin before letting them onto this page\r\n    //TODO should it be a 404 not found? Or inform them they don't have access?\r\n    const token = await auth.getCurrentUser();\r\n    if (!token.isAdmin) return this.props.history.replace(\"/not-found\");\r\n    const { data: users } = await getUsers();\r\n    this.setState({ users });\r\n  }\r\n\r\n  //TODO Make a window pop up to confirm this should happen\r\n  handleDelete = async (user) => {\r\n    const originalUsers = this.state.users;\r\n    const users = originalUsers.filter((m) => m._id !== user._id);\r\n    this.setState({ users });\r\n\r\n    try {\r\n      await deleteUser(user._id);\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404)\r\n        toast.error(\"This user has already been deleted\");\r\n\r\n      this.setState({ users: originalUsers });\r\n    }\r\n  };\r\n\r\n  handlePageChange = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleSearch = (query) => {\r\n    this.setState({ searchQuery: query, selectedType: null, currentPage: 1 });\r\n  };\r\n\r\n  handleSort = (sortColumn) => {\r\n    this.setState({ sortColumn });\r\n  };\r\n\r\n  getPageData = () => {\r\n    const {\r\n      pageSize,\r\n      currentPage,\r\n      sortColumn,\r\n      searchQuery,\r\n      users: allUsers,\r\n    } = this.state;\r\n\r\n    let filtered = allUsers;\r\n    if (searchQuery) {\r\n      filtered = allUsers.filter((m) =>\r\n        m.name.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n    }\r\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n    const users = paginate(sorted, currentPage, pageSize);\r\n\r\n    return { totalCount: filtered.length, data: users };\r\n  };\r\n\r\n  render() {\r\n    const { length: count } = this.state.users;\r\n    const { pageSize, currentPage, sortColumn, searchQuery } = this.state;\r\n    const user = auth.getCurrentUser();\r\n    if (count === 0)\r\n      return (\r\n        <div className=\"back\">\r\n          {/*TODO this button is repeated twice */}\r\n          {user && user.isAdmin && (\r\n            <Link\r\n              to=\"/flavoursEdit/new\"\r\n              className=\"btn btn-primary\"\r\n              stye={{ marginBottom: 20 }}\r\n            >\r\n              New User\r\n            </Link>\r\n          )}\r\n          <p>Somehow there are no users</p>\r\n        </div>\r\n      );\r\n\r\n    const { totalCount, data: users } = this.getPageData();\r\n\r\n    return (\r\n      <div className=\"row back\">\r\n        <div className=\"col\">\r\n          {user && user.isAdmin && (\r\n            <Link\r\n              to=\"/flavoursEdit/new\"\r\n              className=\"btn btn-primary\"\r\n              stye={{ marginBottom: 20 }}\r\n            >\r\n              New User\r\n            </Link>\r\n          )}\r\n          <p>Currently {totalCount} users.</p>\r\n\r\n          <SearchBox value={searchQuery} onChange={this.handleSearch} />\r\n          <UsersTable\r\n            users={users}\r\n            sortColumn={sortColumn}\r\n            onDelete={this.handleDelete}\r\n            onSort={this.handleSort}\r\n          />\r\n          <Pagination\r\n            itemsCount={totalCount}\r\n            pageSize={pageSize}\r\n            currentPage={currentPage}\r\n            onPageChange={this.handlePageChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Users;\r\n","import React from \"react\";\r\nimport { getFlavour } from \"../services/flavourService\";\r\nimport Content from \"./common/content\";\r\nimport { Link } from \"react-router-dom\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass FlavourDescription extends Content {\r\n  state = {\r\n    data: {\r\n      name: \"\",\r\n      typeId: \"\",\r\n      description: \"\",\r\n      cost: \"\",\r\n      licks: \"\",\r\n      picture: \"\",\r\n    },\r\n    types: [],\r\n  };\r\n\r\n  async populateFlavour() {\r\n    //if a flavour is not found redirect to 404\r\n    try {\r\n      //PROPS can be attained in this way\r\n      const flavourId = this.props.match.params.id;\r\n      const { data: flavour } = await getFlavour(flavourId);\r\n      //map the fields to the correct data types based on the flavour type found in the URL\r\n      this.setState({ data: this.mapToViewModel(flavour) });\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404) {\r\n        this.props.history.replace(\"/not-found\");\r\n      }\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.populateFlavour();\r\n  }\r\n\r\n  //input the flavour attained via the URL and set the objects data to the fields in the form\r\n  mapToViewModel(flavour) {\r\n    this.setState({\r\n      name: flavour.name,\r\n      cost: flavour.cost,\r\n      licks: flavour.licks,\r\n    });\r\n    return {\r\n      _id: flavour._id,\r\n      name: flavour.name,\r\n      typeId: flavour.type._id,\r\n      description: flavour.description,\r\n      cost: flavour.cost,\r\n      licks: flavour.licks,\r\n      picture: flavour.picture,\r\n    };\r\n  }\r\n  /* TODO design a nice layout for the ice cream descriptions here */\r\n  render() {\r\n    const user = auth.getCurrentUser();\r\n    return (\r\n      <div className=\"container back\">\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-9 col-md-6\">\r\n            <h1>{this.state.name}</h1>\r\n            {this.renderText(\"description\", \"Description\")}\r\n            <br />\r\n            <p>Cost: ${this.state.cost}</p>\r\n            <p>Licks: {this.state.licks}/5</p>\r\n          </div>\r\n          <div className=\"col-sm-9 col-md-6\">\r\n            {this.renderImage(\"image\", \"Image\")}\r\n          </div>\r\n        </div>\r\n        <Link to={\"/flavours\"}>\r\n          <button className=\"btn btn-success\">Back</button>\r\n        </Link>\r\n        {user && user.isAdmin && (\r\n          <Link to={`/flavoursedit/${this.state.data._id}`}>\r\n            <button className=\"btn btn-primary\">Edit</button>\r\n          </Link>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FlavourDescription;\r\n","import React from \"react\";\r\n\r\nconst Input = ({ name, label, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input {...rest} name={name} id={name} className=\"form-control\" />\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\n\r\n//...rest will take in account all additional properties allowing it to be more flexible\r\n//use <select /> for dropdown list, add options to it\r\n//Passing in parameters to the <Select /> component from outside sources\r\nconst Select = ({ name, label, options, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <select name={name} id={name} {...rest} className=\"form-control\">\r\n        <option value=\"\" />\r\n        {options.map((option) => (\r\n          <option key={option._id} value={option._id}>\r\n            {option.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Input from \"./input\";\r\nimport Select from \"./select\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    data: {},\r\n    errors: {},\r\n  };\r\n  validate = () => {\r\n    const options = { abortEarly: false };\r\n    const { error } = Joi.validate(this.state.data, this.schema, options);\r\n    if (!error) return null;\r\n\r\n    const errors = {};\r\n    for (let item of error.details) {\r\n      errors[item.path[0]] = item.message;\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    const schema = { [name]: this.schema[name] };\r\n    const { error } = Joi.validate(obj, schema);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const errors = this.validate();\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return;\r\n\r\n    this.doSubmit();\r\n  };\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const errors = { ...this.state.errors };\r\n    const errorMessage = this.validateProperty(input);\r\n    if (errorMessage) errors[input.name] = errorMessage;\r\n    else delete errors[input.name];\r\n    const data = { ...this.state.data };\r\n    data[input.name] = input.value;\r\n    this.setState({ data, errors });\r\n  };\r\n\r\n  renderButton(label) {\r\n    return (\r\n      <button disabled={this.validate()} className=\"btn btn-primary\">\r\n        {label}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  renderInput(name, label, type = \"text\") {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Input\r\n        type={type}\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n  //for dropdown we use <Select /> component with options associated with it\r\n  renderSelect(name, label, options) {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Select\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        options={options}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport Form from \"./common/form\";\r\nimport Joi from \"joi-browser\";\r\nimport { getTypes } from \"../services/typeService\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getFlavour, saveFlavour } from \"../services/flavourService\";\r\n\r\nclass FlavourForm extends Form {\r\n  state = {\r\n    data: {\r\n      name: \"\",\r\n      typeId: \"\",\r\n      description: \"\",\r\n      cost: \"\",\r\n      licks: \"\",\r\n      picture: \"\",\r\n    },\r\n    types: [],\r\n    errors: {},\r\n    name: \"New Flavour\",\r\n  };\r\n\r\n  schema = {\r\n    _id: Joi.string(),\r\n    name: Joi.string().required().label(\"Title\"),\r\n    typeId: Joi.string().required().label(\"Type\"),\r\n    description: Joi.string().label(\"Description\"),\r\n    cost: Joi.number().required().min(0).max(10).label(\"Cost\"),\r\n    licks: Joi.number(),\r\n    picture: Joi.string(),\r\n  };\r\n\r\n  async populateTypes() {\r\n    //retrieving all types at the beginning of the components life cycle\r\n    const { data: types } = await getTypes();\r\n    this.setState({ types });\r\n  }\r\n\r\n  async populateFlavour() {\r\n    //if a flavour is not found redirect to 404\r\n    try {\r\n      //checking the ID that is passed in via the URL if it is new do not populate fields\r\n      //PROPS can be attained in this way\r\n      const flavourId = this.props.match.params.id;\r\n      if (flavourId === \"new\") {\r\n        return;\r\n      }\r\n      const { data: flavour } = await getFlavour(flavourId);\r\n      //map the fields to the correct data types based on the flavour type found in the URL\r\n      this.setState({ data: this.mapToViewModel(flavour) });\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404) {\r\n        this.props.history.replace(\"/not-found\");\r\n      }\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.populateTypes();\r\n    await this.populateFlavour();\r\n  }\r\n\r\n  //input the flavour attained via the URL and set the objects data to the fields in the form\r\n  mapToViewModel(flavour) {\r\n    this.setState({ name: flavour.name });\r\n    return {\r\n      _id: flavour._id,\r\n      name: flavour.name,\r\n      typeId: flavour.type._id,\r\n      description: flavour.description,\r\n      cost: flavour.cost,\r\n      licks: flavour.licks,\r\n      picture: flavour.picture,\r\n    };\r\n  }\r\n\r\n  doSubmit = async () => {\r\n    //take data from the form and use it to save the flavour (either adding a new or updating existing)\r\n    await saveFlavour(this.state.data);\r\n\r\n    this.props.history.push(\"/flavours\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"back\">\r\n        <h1>{this.state.name}</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"name\", \"Name\")}\r\n          {this.renderSelect(\"typeId\", \"Type\", this.state.types)}\r\n          {this.renderInput(\"description\", \"Description\")}\r\n          {this.renderInput(\"cost\", \"Cost\")}\r\n          {this.renderInput(\"licks\", \"Licks\", \"Number\")}\r\n          {this.renderInput(\"picture\", \"Picture URL\")}\r\n          <Link to={\"/flavours\"}>\r\n            <button className=\"btn btn-success\">Back</button>\r\n          </Link>\r\n          {this.renderButton(\"Save\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FlavourForm;\r\n","import React from \"react\";\r\nimport Carousel from \"react-bootstrap/Carousel\";\r\nimport image1 from \"../images/Hamlicks_LOGOCropped.png\";\r\nimport image2 from \"../images/Carousel1.jpg\";\r\nimport image3 from \"../images/Carousel2.jpg\";\r\nimport image4 from \"../images/Carousel3.jpg\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//TODO Change the styling for each page to a CSS page, makes it less messy\r\nconst Home = () => {\r\n  return (\r\n    <Carousel>\r\n      <Carousel.Item>\r\n        <img className=\"w-100 iceCreamImage\" src={image1} alt=\"First slide\" />\r\n      </Carousel.Item>\r\n      <Carousel.Item>\r\n        <img className=\"w-100 iceCreamImage\" src={image2} alt=\"Second Slide\" />\r\n\r\n        <Carousel.Caption className=\"carouselCaption\">\r\n          <h3 className=\"carouselHeader\">Welcome to Hamlicks!</h3>\r\n          <p className=\"carouselText\">\r\n            Where new ideas turn into interesting flavours\r\n          </p>\r\n        </Carousel.Caption>\r\n      </Carousel.Item>\r\n      <Carousel.Item>\r\n        <img className=\"w-100 iceCreamImage\" src={image3} alt=\"Third slide\" />\r\n\r\n        <Carousel.Caption className=\"carouselCaption\">\r\n          <h3 className=\"carouselHeader\">Important!</h3>\r\n          <p className=\"carouselText\">\r\n            This is a mock website to showcase on the developers portfolio\r\n          </p>\r\n        </Carousel.Caption>\r\n      </Carousel.Item>\r\n      <Carousel.Item>\r\n        <img className=\"w-100 iceCreamImage\" src={image4} alt=\"Third slide\" />\r\n\r\n        <Carousel.Caption className=\"carouselCaption\">\r\n          <h3 className=\"carouselHeader\">Experience</h3>\r\n          <p className=\"carouselText\">Check out our flavours!</p>\r\n          <Link\r\n            className=\"nav-link center\"\r\n            to=\"/flavours\"\r\n            stye={{ textDecoration: \"none\", fontWeight: \"bold\" }}\r\n          >\r\n            Click to see them here\r\n          </Link>\r\n        </Carousel.Caption>\r\n      </Carousel.Item>\r\n    </Carousel>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport aboutImage from \"../images/About.png\";\r\nimport mintyImage from \"../images/Minty.png\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <Container className=\"back\">\r\n      <h1 className=\"center\">About Hamlicks</h1>\r\n      <p>\r\n        This is a website for a fake ice cream company, as a side passion of\r\n        mine I love making ice cream and experimenting with new interesting\r\n        flavours\r\n      </p>\r\n      <p>\r\n        The website itself has been created with React components as well as\r\n        accesses its information from Mongo DB, the backend service is created\r\n        with Node JS, express and a variety of security libraries.\r\n      </p>\r\n      <h2>Details</h2>\r\n      <Row>\r\n        <Col xs={12} md={6}>\r\n          <p>\r\n            The flavours page is organized via pagination and you are able to\r\n            sort each column either via descending or ascending order. Your\r\n            favoured flavours will be saved to your account and remembered next\r\n            time you log in.\r\n          </p>\r\n          <p>\r\n            When logged in the navigation bar will change accordingly (also\r\n            based on your security level). If you attempt to access a page you\r\n            are not allowed to access it will prompt you to log in first before\r\n            redirecting you back to the page you wished to see.\r\n          </p>\r\n          <p>\r\n            When registering a new account the validation will auto update as\r\n            you type. Informing you if your information is accurate. The\r\n            register button is not clickable until the form has been filled out\r\n            correctly\r\n          </p>\r\n        </Col>\r\n        <Col className=\"center\" xs={9} md={6}>\r\n          <img\r\n            className=\"center\"\r\n            src={mintyImage}\r\n            alt=\"Does that ice cream have.. ears?\"\r\n            height=\"auto\"\r\n            width=\"300\"\r\n            margin=\"auto\"\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <h2>Security</h2>\r\n      <p>\r\n        The website also has tiered access, if you are registered as a user and\r\n        admin you will be able to view other profiles, edit and delete flavours\r\n        (and profiles as well). Regular users will be able to view their\r\n        information as well as update it.\r\n      </p>\r\n      <p>\r\n        Passwords are hash encrypted with B-Crypt for additional levels of\r\n        security. When logging in your computer will be passed a Json web token\r\n        to verify your account details.\r\n      </p>\r\n      <img\r\n        className=\"d-block w-100\"\r\n        src={aboutImage}\r\n        alt=\"Shiba wants Ice Cream!\"\r\n        height=\"500\"\r\n        width=\"250\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport Form from \"./common/form\";\r\nimport Joi from \"joi-browser\";\r\nimport { getUser, saveUser } from \"../services/userService\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass UserForm extends Form {\r\n  state = {\r\n    data: {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    errors: {},\r\n    name: \"New User\",\r\n  };\r\n\r\n  schema = {\r\n    _id: Joi.string(),\r\n    name: Joi.string().required().label(\"Title\"),\r\n    email: Joi.string().email().label(\"Email\"),\r\n    password: Joi.string().min(5),\r\n  };\r\n  //TODO Having to type a new password when updating profile seems difficult, consider removing?\r\n  async populateUser() {\r\n    try {\r\n      //checking the ID that is passed in via the URL if it is new do not populate fields\r\n      //TODO I re-use this in a few places, maybe consolodate this?\r\n      const userId = this.props.match.params.id;\r\n      const token = await auth.getCurrentUser();\r\n      /*TODO this will ensure others cant view other profiles, Needs to be checked on backend as well */\r\n      if (token._id !== userId && !token.isAdmin)\r\n        return this.props.history.replace(\"/not-found\");\r\n      if (userId === \"new\") {\r\n        return;\r\n      }\r\n      const { data: user } = await getUser(userId);\r\n      this.setState({ data: this.mapToViewModel(user) });\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404) {\r\n        this.props.history.replace(\"/not-found\");\r\n      }\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.populateUser();\r\n  }\r\n\r\n  //input the user attained via the URL and set the objects data to the fields in the form\r\n  mapToViewModel(user) {\r\n    this.setState({ name: user.name, favorites: user.favorites });\r\n    return {\r\n      _id: user._id,\r\n      name: user.name,\r\n      email: user.email,\r\n      password: \"\",\r\n    };\r\n  }\r\n\r\n  doSubmit = async () => {\r\n    //take data from the form and use it to save the user (either adding a new or updating existing)\r\n    //TODO Somehow I am ifnoring the isAdmin but if I try to ignore the favorites it will null out the list\r\n    try {\r\n      let user = auth.getCurrentUser();\r\n      delete user.iat;\r\n      user._id = this.state.data._id;\r\n      user.name = this.state.data.name;\r\n      user.email = this.state.data.email;\r\n      user.password = this.state.data.password;\r\n      user.favorites = this.state.favorites;\r\n      await saveUser(user);\r\n      const { state } = this.props.location;\r\n      window.location = state ? state.from.pathname : \"/\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.email = ex.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"back\">\r\n        <h1>{this.state.name}</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"name\", \"Name\")}\r\n          {this.renderInput(\"email\", \"Email\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {this.renderButton(\"Save\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserForm;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return <h1>Not Found</h1>;\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport Form from \"./common/form\";\r\nimport Joi from \"joi-browser\";\r\nimport auth from \"../services/authService\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport chickyImage from \"../images/Chicky.png\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\n//TODO Make the text forms for the login window a bit smaller maybe? (they dont need to be this long)\r\nclass LoginForm extends Form {\r\n  state = {\r\n    data: { email: \"\", password: \"\" },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    email: Joi.string().required().label(\"Email\"),\r\n    password: Joi.string().required().label(\"Password\"),\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const { data } = this.state;\r\n      await auth.login(data.email, data.password);\r\n      const { state } = this.props.location;\r\n      window.location = state ? state.from.pathname : \"/\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.email = ex.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (auth.getCurrentUser()) return <Redirect to=\"/\" />;\r\n    return (\r\n      <Container className=\"back\">\r\n        <Row>\r\n          <Col xs={12} md={7}>\r\n            <h1>Login</h1>\r\n            <form onSubmit={this.handleSubmit}>\r\n              {this.renderInput(\"email\", \"Email\")}\r\n              {this.renderInput(\"password\", \"Password\", \"password\")}\r\n              {this.renderButton(\"Login\")}\r\n            </form>\r\n          </Col>\r\n          <Col xs={12} md={5}>\r\n            <img\r\n              className=\"center\"\r\n              src={chickyImage}\r\n              alt=\"Thats one cool chick\"\r\n              height=\"400\"\r\n              width=\"300\"\r\n              margin=\"auto\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import { Component } from \"react\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    auth.logout();\r\n    window.location = \"/\";\r\n  }\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Logout;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport auth from \"../../services/authService\";\r\n\r\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (!auth.getCurrentUser())\r\n          return (\r\n            <Redirect\r\n              to={{ pathname: \"/login\", state: { from: props.location } }}\r\n            />\r\n          );\r\n        return Component ? <Component {...props} /> : render(props);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React from \"react\";\r\nimport Form from \"./common/form\";\r\nimport Joi from \"joi-browser\";\r\nimport * as userService from \"../services/userService\";\r\nimport auth from \"../services/authService\";\r\nimport strawPiggyImage from \"../images/Strawpiggy.png\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nclass RegisterForm extends Form {\r\n  state = {\r\n    data: { email: \"\", password: \"\", name: \"\" },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    email: Joi.string().required().label(\"Email\"),\r\n    password: Joi.string().required().min(5).label(\"Password\"),\r\n    name: Joi.string().required().min(2).label(\"Name\"),\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const response = await userService.register(this.state.data);\r\n      auth.loginWithJwt(response.headers[\"x-auth-token\"]);\r\n      window.location = \"/\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.email = ex.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"back\">\r\n        <Row>\r\n          <Col xs={12} md={7}>\r\n            <h1>Register</h1>\r\n            <form onSubmit={this.handleSubmit}>\r\n              {this.renderInput(\"email\", \"Email\")}\r\n              {this.renderInput(\"name\", \"Name\")}\r\n              {this.renderInput(\"password\", \"Password\", \"password\")}\r\n              {this.renderButton(\"Register\")}\r\n            </form>\r\n          </Col>\r\n          <Col xs={12} md={5}>\r\n            <img\r\n              className=\"center\"\r\n              src={strawPiggyImage}\r\n              alt=\"Strawpiggy\"\r\n              height=\"400\"\r\n              width=\"300\"\r\n              margin=\"auto\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterForm;\r\n","import React, { Component } from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport Navbar from \"./components/navbar\";\r\nimport UserProfile from \"./components/userProfile\";\r\nimport Flavours from \"./components/flavours\";\r\nimport Users from \"./components/users\";\r\nimport FlavourDescription from \"./components/flavourDescription\";\r\nimport FlavourForm from \"./components/flavourForm\";\r\nimport Home from \"./components/home\";\r\nimport About from \"./components/about\";\r\nimport UserForm from \"./components/userForm\";\r\nimport NotFound from \"./components/common/notFound\";\r\nimport LoginForm from \"./components/loginForm\";\r\nimport Logout from \"./components/logout\";\r\nimport ProtectedRoute from \"./components/common/protectedRoute\";\r\nimport auth from \"./services/authService\";\r\nimport RegisterForm from \"./components/registerForm\";\r\nimport \"./styles/bootstrap.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./styles/App.css\";\r\nimport \"./styles/content.css\";\r\n//TODO the import statements are getting a bit messy, maybe a start up component?\r\n//TODO component will be \"make your own ice cream\"\r\n//TODO Fix the navbar extend button (currently if the window is too small and the collapsed window button shows up clicking it wont work)\r\n//TODO If a user is deleted while logged in may need to check the DB And log them out Somewhere in this app make a consistent check to ensure their account is still in the DB\r\n//TODO add an edit profile form\r\nclass App extends Component {\r\n  state = {};\r\n  componentDidMount() {\r\n    const user = auth.getCurrentUser();\r\n    this.setState({ user });\r\n  }\r\n  render() {\r\n    const { user } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <ToastContainer />\r\n        <Navbar user={user} />\r\n        <main className=\"container\">\r\n          <Switch>\r\n            <Route path=\"/login\" component={LoginForm} />\r\n            <Route path=\"/logout\" component={Logout} />\r\n            <Route path=\"/register\" component={RegisterForm} />\r\n            <ProtectedRoute path=\"/flavoursedit/:id\" component={FlavourForm} />\r\n            <ProtectedRoute path=\"/users/:id\" component={UserProfile} />\r\n            <ProtectedRoute\r\n              path=\"/users\"\r\n              render={(props) => <Users {...props} user={user} />}\r\n            />\r\n            <ProtectedRoute path=\"/usersedit/:id\" component={UserForm} />\r\n            <Route path=\"/about\" component={About} />\r\n            <Route path=\"/flavours/:id\" component={FlavourDescription} />\r\n            <Route\r\n              path=\"/flavours\"\r\n              render={(props) => <Flavours {...props} user={user} />}\r\n            />\r\n            <Route path=\"/not-found\" component={NotFound} />\r\n            <Route path=\"/\" exact component={Home} />\r\n            <Redirect to=\"/not-found\" />\r\n          </Switch>\r\n        </main>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport \"./styles/index.css\";\r\nimport App from \"./App\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/Hamlicks_TITLE.92500dbc.png\";","module.exports = __webpack_public_path__ + \"static/media/Piggy.8b35c35c.png\";","module.exports = __webpack_public_path__ + \"static/media/Hamlicks_LOGOCropped.e2c8826e.png\";","module.exports = __webpack_public_path__ + \"static/media/Carousel1.0efe9e2a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Carousel2.291d3dec.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Carousel3.b11f7d05.jpg\";","module.exports = __webpack_public_path__ + \"static/media/About.1ed87fd8.png\";","module.exports = __webpack_public_path__ + \"static/media/Minty.0ff150a4.png\";","module.exports = __webpack_public_path__ + \"static/media/Chicky.26eaf9af.png\";","module.exports = __webpack_public_path__ + \"static/media/Strawpiggy.648321ea.png\";"],"sourceRoot":""}